from Crypto.Util.number import getPrime, GCD, bytes_to_long

p = getPrime(1024)
q = getPrime(1024)
n = p * q
phi = (p - 1) * (q - 1) // GCD(p - 1, q - 1)

# Hey, look, twin primes!
e1 = 0x10001
e2 = 0x10003

with open("flag.txt", "rb") as f:
    flag = f.read()
    assert len(flag) == 35
    flag = bytes_to_long(flag)

c1 = pow(flag, e1, n)
c2 = pow(e1 * flag, e2, n)

print(f"{hex(n) = }")
print(f"{hex(c1) = }")
print(f"{hex(c2) = }")

# This printed:
###
# hex(n) = '0xada3e881a54858c260d9f59494a0fb06987264c97979733a1d5bb5d236974a89273eb25d990fd218bf1ef7eea88e56e09e1e267bc267dff0a6db74d281ce9ee86bd222fb1207e8651cac81b94f068fb924fb19149e4f7589f34ff3aebe945a10d0612270b0b8ef3f44bd4705b59609ccf16c8448db7caadb8d24cf6a3001fc250b88d3db677fd2c4a0cf6a6a2b73061bc5545b3e3d3cfa824464d129fcb0d3cc4bf680ec57ab55b64ea3b551af7c784aab6fb7512b54c0c2596c83a7c89ba16eda771e4ffe4c416b68a1fc8250219f93cbc1638bc4a1ee1ecf55670031a76152029eb163d1f2c0ea09a35a80f69b80a5ccd5e892989f7b18039d0055f3cb040b'
# hex(c1) = '0x5649ef77d69e1d95a2e86ea2c909d71910e36999e3ab8bcb205360d77c9d390a7b2566b6b3956947fe77c9594701daec745c31fb849363dbc3b0562c8f419da3667617e54c5025d71dbba9b721ae3b4176db2bb2cb56221827d87d3b599202487b82ccf7a1f9da7f607fb298695c649c3a6ed635f8eeda1412afbe378c7b84385a6c7ca8eabb4e3ad2d45741ff7ca0c93aec73af86b6ca274ac0a24389ebea4d431a172f61c270f5ff4a011d61c5bdffd460bff4e2c6d86bd3c6c62eb74eafd87e375b0f09d2d6020ca52f2a548802202173abc1d625f47498a1387ae0ef65178782d142441b5c2f1dfa66d387f73b5dbfaf7eadf4490b84b8f9161c7524a6f9'
# hex(c2) = '0x102a39f9109c58a3f8a8f73e0abef258200d91bdb854fb2ba4f1f3a3ddf4dfc5de312381398d561d8f04ddef37fd54d19bbd33deaa585b8ddea776c48d839c2afd52ab95593a301ce77f40ba49dd6eb6b850d27d50bd4c0016bb09efada43e39b2387b58b5052a30fde382c5117ce13864845f7afc9bf02df20948c03caba819fbf8dd83b5b61dbef8cca8518597575bd3fa0e6b2c3f82b1d1ce4d7b57ac936a89f02aa0a99ce95e8b9fdf824733a99cbf5e85fbeff837ec90acc1c13548a9bff08f50ed653b4f0cadab24d9852c7a43779c8cfb571a3beb1fdf03b0f9a8b0ebd1d6e8648ec34eab5994eafcf1b36fe7ded4d321d79ddac4ea9390978978d8e6'
###
