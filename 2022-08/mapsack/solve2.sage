import secrets
import math

n = 45546267103257159343575991715120100413155645534562974437144945182596286906116
g = 213415714283782672308383502192890837955
pub = [7088607217424438797834638878422642770324737163448111225821499499322342035665, 13275692395282980164231120660848459516889124436617016762747112940288252722969, 40246416658166633956398088266066234889778708804154283145728998898368916599693, 24071975734943501171926706280140728241502903089541906080553433510298397820161, 20514468506503086628684921229110775826958135259049167500430359233131708644565, 21662184464651676456215844544484653529398819954293478862039612734728813851601, 12449396279580033737728276090848559133271399435980221457332609672055516253517, 45473094784058255198178175645570492044083020251601090491220758831101086462117, 36667206148632779098194539797167865771543751156139719304242540748489426137417, 31401507830208045863685769719472929235086539242040733670057096633483658844633, 45501929687502094013842596477025014320796594522567967488862560606157903465011, 6449941342908236213442891756052103818879083227992015953026607620319263236091, 12662921812295178075042754591152871057873112247473523073026255403597099972319, 38061343773884715982121048740491898720495010691425730766139551294800472682819, 30855180656925070114832441193326052412458229715686884728185350278097717062691, 6451574271221804389821962311934073778113702491879196604927139893136921824925, 27332895319534996938199685127463597985420823246869898732714281188914953737113, 27084916500542698116826677477110424026678356182133953169926228443187356992191, 22044584141791359689744731934514111503072888524202208843184770229708826153707, 25905676195412974587990254072421777137005076725200777045200120915074237238457, 33603636016068038667932498673460212766256862430158633779601759557679330664545, 14624786036179737786652946006235700037997977098425729183425290166067117225613, 19222306582983862878675545609272194593043937821814856657430859147018881684549, 5695904631690524109661484550096318098031759807482949747137856877024153896313, 20621522644095098712598561976152318991350028651244940764868080544868510797977, 5716652758830367100178852985269690422626223131079319630368162751276074082325, 38444303722744676937789836919977634666382378982431959738035676904639189225431, 41644466478771391039822559847446100471768109993419692255514450649697485785831, 19118871691534179503733195305564125017299042735869346798181221664546975391447, 11700189585805503991480996875843338797873820089231609681234370405364317172227, 5765032830660233045548476742982463419825075983448735253982668368823856213905, 3545758334356618888438041794103068169073329108041658206070405917937743376555, 36291118947919243950507353671977163800534182377241003700230658928115217663405, 31300144749738499969257990330874229662470326457820439845721530130391190040311, 21214627738762513759942978472796780243775789835598070193573038809961014012401, 38370304353786093810652413089172054214423853770462637473847322977104706230295, 17273238072020586013377202134000152887840291340269211331079975760420356940851, 13745482124668519479104765209070081159756781121838510853957347006523621739623, 7337762063275938190861811920098851150581113339102968405693854244800859589547, 22320248922179159489411431954655523532673605474181698193329198199125171988527, 30554170735134904009086343566621820768287920147352645378083723598611487137377, 24252280178943198041992911128950871280155950841886063021086889988579169496951, 1402760735698960080903895898087298420568524036851815047727387216090701422799, 11082442360591125108827672002312583673778892703195138232546599632859626197073, 20101383998826427821629925870849553986142525741514106177171511768888989844657, 25622644931951722807682740503992443427428273518323353198935217773049598564687, 36651459835450278676197993273557901741011777318253856176698554118605545654919, 34109607562325227153130109236723913081894303069705319638305679767129194833037, 27124409966243695131946553056915918247623810365330164575945353419339501983877, 30729288560861453352052680254383347793080882822504034075422645592304793905559, 19933780965921692733083616399118897617102894235086138703330126849572002783939, 27660852772103433605474867807656938271769857285510172344468209149445920322833, 2636183111898196572545639125872066983978553647115337199992631025072922196433, 266166599471932735969445284062698108078449303653653713290269971471102569123, 34930464483412682199160914505066640211130414705524035567674979990104723576751, 11656860270176931444014596799433930308532510375125780331192058171633729700539, 9042707221683318743920164021839170718210205420603492486070309553301195362443, 2191903752559538131070793873570115382244717444728123995542688629612262903201, 10974266463843555383160275095003824051298687617566431675439535582053183126773, 15133037659434594315887532145051662056698340107967704033569126674323805233695, 2633460642961752642420684211719733774170283350329957595742992433224225844421, 11010887584279576144873744794678004409081702708611740214269201013776769280989, 18468368199998425228700259072425035003354710395703282689341726895338987187451, 801461159654926356291095930256221337520441604619384013061977570608308896139]
P = 14957040243191203972721612114727644189834461697967196687647561114769563487783
t = n.sqrt()

def dlog(x):
    return (x-1)//t

ls = list(map(dlog, pub))
for k in range(10, 20):
    M = matrix(ls).T.augment(2*matrix.identity(len(ls)))
    M = M.stack(vector([dlog(P) + k*t] + [1]*len(ls)))
    M[:,0]*=2^128
    sol = M.LLL()[0]
    if all([-1<=x<=1 for x in sol]):
        print(sol[1:])
        print(k)

sol = (1, 1, -1, -1, 1, 1, 1, -1, -1, -1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, 1, -1, -1, 1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, 1, 1, 1, -1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1)
key = 0
for i, s in enumerate(sol):
    key |= (1 if s == -1 else 0) << i

from Crypto.Cipher import AES
import hashlib

print(AES.new(hashlib.sha256(int(key).to_bytes(8, "big")).digest(), AES.MODE_ECB).decrypt(bytes.fromhex('2a9c3134b881037003226e6bbdbeae737720a68a167c2eb46b38a5f10d1ec884f6eb56a8ddfe51eb61cc6ac019e73ad6967bc4caed39c92e44d4d3637fbfb1bd')))
# ictf{all_discrete_logs_and_no_play_make_my_mapsack_a_knapsack}
