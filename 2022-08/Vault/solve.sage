from Crypto.Util.number import *

c = 15769299172160500663183031473873512042201566097349818025724939780667419599524309821650331375140641794330588159089918635690336810109866441852059843123037796882858694305788372386710028044295515675319814280211668571120603091297005700881347150541878792520342914211591062867000911151199506968390709181122579460231
n = 76949695802461994677509945383479695643067481842087701926881504886493732761795336091839430933758023107107858611906678976191776750317260066941217882367556248442929218329001406172137508707009376434379416341044772163984829685269163874311355712440565221383625726060639267047472007036556083729475447761221888000000

# factor db + ecm.find_factor
pq = 8772097571417112017798824991437586025604199358582401252653782150796517712784964528629768199618304181437919950857595045114163172179866444723013023538082401
phi = n // pq
assert power_mod(2, phi, pq) == 1

# assuming m < p * q
diff = 95026205724
m = power_mod(c, power_mod(71, diff, phi), pq)

print(long_to_bytes(m))
