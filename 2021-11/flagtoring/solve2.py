from Crypto.PublicKey import RSA
from Crypto.Util.number import long_to_bytes

n = 1528656555903550344116452290097825083432239562289311449762856110644178238847468718159931142582566958406852960634326674294592831730135914025243113420620191820735271996685130044674881553230289164686150060478587182721212339660071286119
e = 764328277951775172058226145048912541716119781144655724881428055322089119423734359079965571291283479203426480317163292925665158834567666283670763086349732720212733069060883710729256895758575480803498007307124796853534451106915539873

ee = 65537
dd = pow(ee, -1, e - 1)
key = RSA.construct([n, ee, dd])  # RSA.construct supports factoring from n, e, d
print(long_to_bytes(key.p >> 2))
print(long_to_bytes(key.q >> 2))
